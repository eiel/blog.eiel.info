<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>そんなこと覚えてない </title>
    <link>https://blog.eiel.info/tags/sensu/</link>
    <language>en-us</language>
    <author>Tomohiko Himura</author>
    <rights>(C) 2018</rights>
    <updated>2014-03-05 20:16:00 &#43;0900 &#43;0900</updated>

    
      
        <item>
          <title>Sensu を少しだけ触ってみた</title>
          <link>https://blog.eiel.info/blog/2014/03/05/sensu-abc/</link>
          <pubDate>Wed, 05 Mar 2014 20:16:00 &#43;0900</pubDate>
          <author>Tomohiko Himura</author>
          <guid>https://blog.eiel.info/blog/2014/03/05/sensu-abc/</guid>
          <description>

&lt;p&gt;ちょっと前に &lt;a href=&#34;http://sensuapp.org/&#34;&gt;Sensu&lt;/a&gt; を試した。
大したことは試してないのですが、日本語の情報もあまりないので試したことを記録しておこうと思う。&lt;/p&gt;

&lt;h3 id=&#34;sensu-って:a96f6097673edaa404e42451cd38aa4e&#34;&gt;Sensu って？&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/Nagios&#34;&gt;Nagios&lt;/a&gt; という統合監視ツールの置き換えを狙ったプロダクトのようで、Nagios のプラグインがそのまま使えます。
そもそも Nagios のプロトコルをそのまま使ってるようです。&lt;/p&gt;

&lt;p&gt;同様のツールとして &lt;a href=&#34;http://ja.wikipedia.org/wiki/Zabbix&#34;&gt;Zabbix&lt;/a&gt; などありますが、結構毛色が違うツールだということを今回わかりました。(Zabbix は試したことがありますが、Nagios は試したことがないです)&lt;/p&gt;

&lt;p&gt;Zabbix は全部入りみたいな感じで、これだけでなんでもできたりして、入門するには難しい感じです。&lt;/p&gt;

&lt;p&gt;Nagios を利用する際にはグラフを書きたい場合は &lt;a href=&#34;http://munin-monitoring.org/&#34;&gt;munin&lt;/a&gt; などを併用する人も多いようです。
munin は個人的に設定が楽なので、ちょろっとした時に利用します。&lt;/p&gt;

&lt;p&gt;そんなわけで、「いまどきの Nagios」 である Sensu を試してみようという流れです。&lt;/p&gt;

&lt;h3 id=&#34;まずインストールしてみる:a96f6097673edaa404e42451cd38aa4e&#34;&gt;まずインストールしてみる&lt;/h3&gt;

&lt;p&gt;どんなものかピンと来ない場合はまず動かしてみるほうがいいです。
Sensu をインストールするのに chef や puppet が使えるように公式から &lt;a href=&#34;https://github.com/sensu/sensu-chef&#34;&gt;sensu-chef&lt;/a&gt; や &lt;a href=&#34;https://github.com/sensu/sensu-puppet&#34;&gt;chef-puppet&lt;/a&gt; があり割と簡単にインストールできるようです。&lt;/p&gt;

&lt;p&gt;手動でもそんなに難しいわけではなく &lt;a href=&#34;http://sensuapp.org/docs/0.12/guide&#34;&gt;ドキュメント&lt;/a&gt;を見ながらやればできると思います。&lt;/p&gt;

&lt;p&gt;というわけで、今回は sensu-chef を試しました。&lt;/p&gt;

&lt;p&gt;私が chef の初心者なので、その辺のメモも書いています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sensu/sensu-chef&#34;&gt;sensu-chef の README.md をみる&lt;/a&gt;とやり方が書いてあります。
&lt;a href=&#34;http://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; をつかって動かすサンプルがあります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:sensu/sensu-chef.git
$ cd sensu-chef/examples
$ gem install bundler
$ bundle install
$ librarian-chef install
$ vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると sensu-server, suns-clint, sensu-api, sensu-dashboard, Redis, RabbitMQ がインストールされます。&lt;/p&gt;

&lt;p&gt;それぞれの関係は &lt;a href=&#34;http://sensuapp.org/docs/0.12/overview&#34;&gt;ドキュメントに図示されています&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://sensuapp.org/docs/0.12/img/sensu-diagram-4801b356.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;sensu が収集している情報は sensu-api 経由、または sensu-dashboard にアクセスと取得できるようです。
この example を利用した場合、 &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; で sensu-dashboard アクセスできます。
Basic認証がかかっていて、デフォルトでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User名: admin&lt;/li&gt;
&lt;li&gt;password: secret&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;になってます。
ちなみに &lt;a href=&#34;https://github.com/sensu/sensu-chef/blob/master/attributes/default.rb#L35-L36&#34;&gt;attributes/default.rb&lt;/a&gt; に定義されています。
実際に運用する場合は、この値ををどこかで上書きすればよいです。
(chef はいろんなポイントで値を上書きできるっぽい)&lt;/p&gt;

&lt;h3 id=&#34;なんか監視してみる:a96f6097673edaa404e42451cd38aa4e&#34;&gt;なんか監視してみる&lt;/h3&gt;

&lt;p&gt;監視項目の追加には check を追加するようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sensuapp.org/docs/0.12/adding_a_check&#34;&gt;Sensu | An open source monitoring framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最初のサンプルは crond をチェックするもので、 &lt;code&gt;/etc/conf.d/check_cron.json&lt;/code&gt; というJSONファイルを作成することになります。&lt;/p&gt;

&lt;p&gt;この chef のレシピを使っていると chef の機能である Data Bag をつかってcheckの追加ができるようになっています。
&lt;code&gt;data_bags/sensu_checks&lt;/code&gt; ディレクトリにJSONファイルをおくことで設定できるようになっています。
試しに &lt;code&gt;data_bags/sensu_checks/check_cron.json&lt;/code&gt; を作成してみました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;id&amp;quot;: &amp;quot;cron_check&amp;quot;,
    &amp;quot;handlers&amp;quot;: [&amp;quot;default&amp;quot;],
    &amp;quot;command&amp;quot;: &amp;quot;check-procs.rb -p crond -C 1 &amp;quot;,
    &amp;quot;interval&amp;quot;: 5,
    &amp;quot;subscribers&amp;quot;: [&amp;quot;all&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この JSON は &lt;code&gt;/etc/conf.d/check_cron.json&lt;/code&gt; を生成するための&lt;a href=&#34;https://github.com/portertech/chef-monitor&#34;&gt;monitor&lt;/a&gt;というクックブックにより提供されている機能で読み込まれて使用されます。&lt;/p&gt;

&lt;p&gt;このJSONを配置すると下記のような &lt;code&gt;/etc/conf.d/check_cron.json&lt;/code&gt; が生成されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;checks&amp;quot;: {
    &amp;quot;cron_check&amp;quot;: {
      &amp;quot;command&amp;quot;: &amp;quot;check-procs.rb -p crond -C 1 &amp;quot;,
      &amp;quot;subscribers&amp;quot;: [
        &amp;quot;all&amp;quot;
      ],
      &amp;quot;handlers&amp;quot;: [
        &amp;quot;default&amp;quot;
      ],
      &amp;quot;interval&amp;quot;: 5
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;似ているものですが違うものです。&lt;/p&gt;

&lt;p&gt;Sensu は設定ファイルがJSONで書くことができて、Chefやなんかで設定を生成しやすいという特徴があることがわかりました。&lt;/p&gt;

&lt;p&gt;あとは cron をとめたり、開始したりして遊んでみてみると良いと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service cron stop   # crond 停止
$ service cron start  # crond 開始
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;crond を止めてみると下記のような状態になりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.eiel.info/images/2014-03-05-sensu.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;まとめ:a96f6097673edaa404e42451cd38aa4e&#34;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;まだまだわからないことが多いのですが、とりあえず Sensu を体験することができました。
RedisやRabbitMQ のインストールが必要ですが Chef を使えば特に設定はせずに体験することができました。&lt;/p&gt;

&lt;p&gt;ついでに chef の Cookbook を読んで chefの勉強することもできました。&lt;/p&gt;

&lt;h3 id=&#34;参考文献:a96f6097673edaa404e42451cd38aa4e&#34;&gt;参考文献&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/portertech/chef-monitor&#34;&gt;portertech/chef-monitor · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sensuapp.org/docs/0.12&#34;&gt;Sensu | An open source monitoring framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    

  </channel>
</rss>
